var Liquid = require('liquid-node');
var _ = require('lodash');

module.exports = plugin;

function plugin(config) {
    
    var markdownMatcher = /\.md$/i;

    config = config || {};
    var filters = config.filters; 

    var liquidEngine = new Liquid.Engine();

    if (filters) {
        liquidEngine.registerFilters(filters);
    }

    return function (files, metalsmith, done) {

        var templatePromises = [];
        var metadata = metalsmith.metadata();

        for (var filePath in files) {

            var fileObject = files[filePath];

            if (markdownMatcher.exec(filePath)) {

                var input = files[filePath].contents;
                var context = _.extend({}, metadata, fileObject);

                (function (filePath, input, context) {

                    var promise = liquidEngine.parseAndRender(input, context).then(function (content) {

                        files[filePath].contents = new Buffer(content);

                    });

                    templatePromises.push(promise);

                }) (filePath, input, context);
            }
        }

        Promise.all(templatePromises).then(function () {
            done();
        }, function (err) {
            done();
        });
    };
}
